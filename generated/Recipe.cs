// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pizzeria/recipe.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Feedme {

  /// <summary>Holder for reflection information generated from pizzeria/recipe.proto</summary>
  public static partial class RecipeReflection {

    #region Descriptor
    /// <summary>File descriptor for pizzeria/recipe.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RecipeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwaXp6ZXJpYS9yZWNpcGUucHJvdG8SBmZlZWRtZRoZcGl6emVyaWEvaW5n",
            "cmVkaWVudC5wcm90byJ9CgtJbnN0cnVjdGlvbhIMCgRuYW1lGAEgASgJEicK",
            "C2luZ3JlZGllbnRzGAIgAygLMhIuZmVlZG1lLkluZ3JlZGllbnQSJQoGYWN0",
            "aW9uGAMgASgOMhUuZmVlZG1lLlJlY2lwZUFjdGlvbnMSEAoIZHVyYXRpb24Y",
            "BCABKAMitQEKBlJlY2lwZRIMCgRuYW1lGAEgASgJEicKC2luZ3JlZGllbnRz",
            "GAIgAygLMhIuZmVlZG1lLkluZ3JlZGllbnQSEgoKc2hlbGZfbGlmZRgDIAEo",
            "BRIQCghzZXJ2aW5ncxgEIAEoBRIRCgliYXNlX2Nvc3QYBSABKAISDgoGbWFy",
            "Z2luGAYgASgCEhgKEHByZXBhcmF0aW9uX3RpbWUYByABKAMSEQoJY29va190",
            "aW1lGAggASgDKkwKDVJlY2lwZUFjdGlvbnMSCwoHVU5LTk9XThAAEggKBENI",
            "T1AQARIHCgNNSVgQAhIICgRCQUtFEAMSCAoEQk9JTBAEEgcKA0ZSWRAFYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Feedme.IngredientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Feedme.RecipeActions), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedme.Instruction), global::Feedme.Instruction.Parser, new[]{ "Name", "Ingredients", "Action", "Duration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedme.Recipe), global::Feedme.Recipe.Parser, new[]{ "Name", "Ingredients", "ShelfLife", "Servings", "BaseCost", "Margin", "PreparationTime", "CookTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Define the RecipeActions enum
  /// </summary>
  public enum RecipeActions {
    /// <summary>
    /// Default value
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Chop action
    /// </summary>
    [pbr::OriginalName("CHOP")] Chop = 1,
    /// <summary>
    /// Mix action
    /// </summary>
    [pbr::OriginalName("MIX")] Mix = 2,
    /// <summary>
    /// Bake action
    /// </summary>
    [pbr::OriginalName("BAKE")] Bake = 3,
    /// <summary>
    /// Boil action
    /// </summary>
    [pbr::OriginalName("BOIL")] Boil = 4,
    /// <summary>
    /// Fry action
    /// </summary>
    [pbr::OriginalName("FRY")] Fry = 5,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Instruction : pb::IMessage<Instruction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Instruction> _parser = new pb::MessageParser<Instruction>(() => new Instruction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Instruction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedme.RecipeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instruction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instruction(Instruction other) : this() {
      name_ = other.name_;
      ingredients_ = other.ingredients_.Clone();
      action_ = other.action_;
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instruction Clone() {
      return new Instruction(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the instruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ingredients" field.</summary>
    public const int IngredientsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Feedme.Ingredient> _repeated_ingredients_codec
        = pb::FieldCodec.ForMessage(18, global::Feedme.Ingredient.Parser);
    private readonly pbc::RepeatedField<global::Feedme.Ingredient> ingredients_ = new pbc::RepeatedField<global::Feedme.Ingredient>();
    /// <summary>
    /// Ingredients involved in the instruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Feedme.Ingredient> Ingredients {
      get { return ingredients_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private global::Feedme.RecipeActions action_ = global::Feedme.RecipeActions.Unknown;
    /// <summary>
    /// Action to be performed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Feedme.RecipeActions Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 4;
    private long duration_;
    /// <summary>
    /// Duration of the instruction in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Instruction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Instruction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!ingredients_.Equals(other.ingredients_)) return false;
      if (Action != other.Action) return false;
      if (Duration != other.Duration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= ingredients_.GetHashCode();
      if (Action != global::Feedme.RecipeActions.Unknown) hash ^= Action.GetHashCode();
      if (Duration != 0L) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      ingredients_.WriteTo(output, _repeated_ingredients_codec);
      if (Action != global::Feedme.RecipeActions.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Action);
      }
      if (Duration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      ingredients_.WriteTo(ref output, _repeated_ingredients_codec);
      if (Action != global::Feedme.RecipeActions.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Action);
      }
      if (Duration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += ingredients_.CalculateSize(_repeated_ingredients_codec);
      if (Action != global::Feedme.RecipeActions.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (Duration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Instruction other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      ingredients_.Add(other.ingredients_);
      if (other.Action != global::Feedme.RecipeActions.Unknown) {
        Action = other.Action;
      }
      if (other.Duration != 0L) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ingredients_.AddEntriesFrom(input, _repeated_ingredients_codec);
            break;
          }
          case 24: {
            Action = (global::Feedme.RecipeActions) input.ReadEnum();
            break;
          }
          case 32: {
            Duration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ingredients_.AddEntriesFrom(ref input, _repeated_ingredients_codec);
            break;
          }
          case 24: {
            Action = (global::Feedme.RecipeActions) input.ReadEnum();
            break;
          }
          case 32: {
            Duration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Recipe : pb::IMessage<Recipe>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Recipe> _parser = new pb::MessageParser<Recipe>(() => new Recipe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Recipe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedme.RecipeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Recipe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Recipe(Recipe other) : this() {
      name_ = other.name_;
      ingredients_ = other.ingredients_.Clone();
      shelfLife_ = other.shelfLife_;
      servings_ = other.servings_;
      baseCost_ = other.baseCost_;
      margin_ = other.margin_;
      preparationTime_ = other.preparationTime_;
      cookTime_ = other.cookTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Recipe Clone() {
      return new Recipe(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the recipe
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ingredients" field.</summary>
    public const int IngredientsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Feedme.Ingredient> _repeated_ingredients_codec
        = pb::FieldCodec.ForMessage(18, global::Feedme.Ingredient.Parser);
    private readonly pbc::RepeatedField<global::Feedme.Ingredient> ingredients_ = new pbc::RepeatedField<global::Feedme.Ingredient>();
    /// <summary>
    /// List of ingredients
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Feedme.Ingredient> Ingredients {
      get { return ingredients_; }
    }

    /// <summary>Field number for the "shelf_life" field.</summary>
    public const int ShelfLifeFieldNumber = 3;
    private int shelfLife_;
    /// <summary>
    /// Shelf life in days
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShelfLife {
      get { return shelfLife_; }
      set {
        shelfLife_ = value;
      }
    }

    /// <summary>Field number for the "servings" field.</summary>
    public const int ServingsFieldNumber = 4;
    private int servings_;
    /// <summary>
    /// Number of servings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Servings {
      get { return servings_; }
      set {
        servings_ = value;
      }
    }

    /// <summary>Field number for the "base_cost" field.</summary>
    public const int BaseCostFieldNumber = 5;
    private float baseCost_;
    /// <summary>
    /// Base cost of the recipe
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BaseCost {
      get { return baseCost_; }
      set {
        baseCost_ = value;
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 6;
    private float margin_;
    /// <summary>
    /// Margin percentage, corrected spelling
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Margin {
      get { return margin_; }
      set {
        margin_ = value;
      }
    }

    /// <summary>Field number for the "preparation_time" field.</summary>
    public const int PreparationTimeFieldNumber = 7;
    private long preparationTime_;
    /// <summary>
    /// Preparation time in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PreparationTime {
      get { return preparationTime_; }
      set {
        preparationTime_ = value;
      }
    }

    /// <summary>Field number for the "cook_time" field.</summary>
    public const int CookTimeFieldNumber = 8;
    private long cookTime_;
    /// <summary>
    /// Cooking time in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CookTime {
      get { return cookTime_; }
      set {
        cookTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Recipe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Recipe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!ingredients_.Equals(other.ingredients_)) return false;
      if (ShelfLife != other.ShelfLife) return false;
      if (Servings != other.Servings) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BaseCost, other.BaseCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Margin, other.Margin)) return false;
      if (PreparationTime != other.PreparationTime) return false;
      if (CookTime != other.CookTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= ingredients_.GetHashCode();
      if (ShelfLife != 0) hash ^= ShelfLife.GetHashCode();
      if (Servings != 0) hash ^= Servings.GetHashCode();
      if (BaseCost != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BaseCost);
      if (Margin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Margin);
      if (PreparationTime != 0L) hash ^= PreparationTime.GetHashCode();
      if (CookTime != 0L) hash ^= CookTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      ingredients_.WriteTo(output, _repeated_ingredients_codec);
      if (ShelfLife != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ShelfLife);
      }
      if (Servings != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Servings);
      }
      if (BaseCost != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(BaseCost);
      }
      if (Margin != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Margin);
      }
      if (PreparationTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(PreparationTime);
      }
      if (CookTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CookTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      ingredients_.WriteTo(ref output, _repeated_ingredients_codec);
      if (ShelfLife != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ShelfLife);
      }
      if (Servings != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Servings);
      }
      if (BaseCost != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(BaseCost);
      }
      if (Margin != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Margin);
      }
      if (PreparationTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(PreparationTime);
      }
      if (CookTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CookTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += ingredients_.CalculateSize(_repeated_ingredients_codec);
      if (ShelfLife != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShelfLife);
      }
      if (Servings != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Servings);
      }
      if (BaseCost != 0F) {
        size += 1 + 4;
      }
      if (Margin != 0F) {
        size += 1 + 4;
      }
      if (PreparationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PreparationTime);
      }
      if (CookTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CookTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Recipe other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      ingredients_.Add(other.ingredients_);
      if (other.ShelfLife != 0) {
        ShelfLife = other.ShelfLife;
      }
      if (other.Servings != 0) {
        Servings = other.Servings;
      }
      if (other.BaseCost != 0F) {
        BaseCost = other.BaseCost;
      }
      if (other.Margin != 0F) {
        Margin = other.Margin;
      }
      if (other.PreparationTime != 0L) {
        PreparationTime = other.PreparationTime;
      }
      if (other.CookTime != 0L) {
        CookTime = other.CookTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ingredients_.AddEntriesFrom(input, _repeated_ingredients_codec);
            break;
          }
          case 24: {
            ShelfLife = input.ReadInt32();
            break;
          }
          case 32: {
            Servings = input.ReadInt32();
            break;
          }
          case 45: {
            BaseCost = input.ReadFloat();
            break;
          }
          case 53: {
            Margin = input.ReadFloat();
            break;
          }
          case 56: {
            PreparationTime = input.ReadInt64();
            break;
          }
          case 64: {
            CookTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ingredients_.AddEntriesFrom(ref input, _repeated_ingredients_codec);
            break;
          }
          case 24: {
            ShelfLife = input.ReadInt32();
            break;
          }
          case 32: {
            Servings = input.ReadInt32();
            break;
          }
          case 45: {
            BaseCost = input.ReadFloat();
            break;
          }
          case 53: {
            Margin = input.ReadFloat();
            break;
          }
          case 56: {
            PreparationTime = input.ReadInt64();
            break;
          }
          case 64: {
            CookTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
